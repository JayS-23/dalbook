{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8085/api/friends\";\nconst sendFriendRequest = async (senderId, receiverEmail) => {\n  try {\n    const response = await axios.post(`${API_URL}/send`, null, {\n      params: {\n        senderId,\n        receiverEmail\n      }\n    });\n    console.log('Friend request sent successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 500) {\n      console.error('Error:', error.response.data);\n      alert(\"Friend request already sent\");\n    } else {\n      console.error('Error sending friend request:', error);\n      alert('Failed to send friend request');\n    }\n  }\n};\nconst acceptFriendRequest = requestId => {\n  return axios.post(`${API_URL}/accept`, null, {\n    params: {\n      requestId\n    }\n  });\n};\nconst getPendingRequests = userId => {\n  return axios.get(`${API_URL}/pending`, {\n    params: {\n      userId\n    }\n  });\n};\nconst getFriends = userId => {\n  return axios.get(`${API_URL}/list`, {\n    params: {\n      userId\n    }\n  });\n};\nexport default {\n  sendFriendRequest,\n  acceptFriendRequest,\n  getPendingRequests,\n  getFriends\n};","map":{"version":3,"names":["axios","API_URL","sendFriendRequest","senderId","receiverEmail","response","post","params","console","log","data","error","status","alert","acceptFriendRequest","requestId","getPendingRequests","userId","get","getFriends"],"sources":["/Users/jacobdomingo/Group19/frontend/src/services/FriendService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8085/api/friends\";\n\n\nconst sendFriendRequest = async (senderId, receiverEmail) => {\n  try {\n    const response = await axios.post(`${API_URL}/send`, null, {\n      params: { senderId, receiverEmail },\n    });\n    console.log('Friend request sent successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 500) {\n      console.error('Error:', error.response.data);\n      alert(\"Friend request already sent\");\n    } else {\n      console.error('Error sending friend request:', error);\n      alert('Failed to send friend request');\n    }\n  }\n};\n\nconst acceptFriendRequest = (requestId) => {\n  return axios.post(`${API_URL}/accept`, null, { params: { requestId } });\n};\n\nconst getPendingRequests = (userId) => {\n  return axios.get(`${API_URL}/pending`, { params: { userId } });\n};\n\nconst getFriends = (userId) => {\n  return axios.get(`${API_URL}/list`, { params: { userId } });\n};\n\nexport default {\n  sendFriendRequest,\n  acceptFriendRequest,\n  getPendingRequests,\n  getFriends,\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,mCAAmC;AAGnD,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,aAAa,KAAK;EAC3D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,OAAO,EAAE,IAAI,EAAE;MACzDM,MAAM,EAAE;QAAEJ,QAAQ;QAAEC;MAAc;IACpC,CAAC,CAAC;IACFI,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEJ,QAAQ,CAACK,IAAI,CAAC;IAC/D,OAAOL,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACN,QAAQ,IAAIM,KAAK,CAACN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;MACnDJ,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACN,QAAQ,CAACK,IAAI,CAAC;MAC5CG,KAAK,CAAC,6BAA6B,CAAC;IACtC,CAAC,MAAM;MACLL,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDE,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF;AACF,CAAC;AAED,MAAMC,mBAAmB,GAAIC,SAAS,IAAK;EACzC,OAAOf,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,SAAS,EAAE,IAAI,EAAE;IAAEM,MAAM,EAAE;MAAEQ;IAAU;EAAE,CAAC,CAAC;AACzE,CAAC;AAED,MAAMC,kBAAkB,GAAIC,MAAM,IAAK;EACrC,OAAOjB,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,UAAU,EAAE;IAAEM,MAAM,EAAE;MAAEU;IAAO;EAAE,CAAC,CAAC;AAChE,CAAC;AAED,MAAME,UAAU,GAAIF,MAAM,IAAK;EAC7B,OAAOjB,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,OAAO,EAAE;IAAEM,MAAM,EAAE;MAAEU;IAAO;EAAE,CAAC,CAAC;AAC7D,CAAC;AAED,eAAe;EACbf,iBAAiB;EACjBY,mBAAmB;EACnBE,kBAAkB;EAClBG;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}