{"ast":null,"code":"var _jsxFileName = \"/Users/jacobdomingo/Group19/frontend/src/components/friendRequests/FriendsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport friendService from \"../../services/FriendService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendsList = ({\n  userId\n}) => {\n  _s();\n  const [friends, setFriends] = useState([]);\n  useEffect(() => {\n    friendService.getFriends(userId).then(response => {\n      setFriends(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching friends:\", error);\n    });\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        padding: \"10px 10px\"\n      },\n      children: \"Your Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: friends.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"name\",\n        children: friend.firstName + \" \" + friend.lastName\n      }, friend.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(FriendsList, \"QwbMuLO2kqwKmE9hi2K1MX3vzvc=\");\n_c = FriendsList;\nexport default FriendsList;\nvar _c;\n$RefreshReg$(_c, \"FriendsList\");","map":{"version":3,"names":["React","useEffect","useState","friendService","jsxDEV","_jsxDEV","FriendsList","userId","_s","friends","setFriends","getFriends","then","response","data","catch","error","console","children","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","map","friend","className","firstName","lastName","id","_c","$RefreshReg$"],"sources":["/Users/jacobdomingo/Group19/frontend/src/components/friendRequests/FriendsList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport friendService from \"../../services/FriendService\";\n\nconst FriendsList = ({ userId }) => {\n  const [friends, setFriends] = useState([]);\n\n  useEffect(() => {\n    friendService\n      .getFriends(userId)\n      .then((response) => {\n        setFriends(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching friends:\", error);\n      });\n  }, [userId]);\n\n  return (\n    <div>\n      <h3 style={{ padding: \"10px 10px\" }}>Your Friends</h3>\n      <ul>\n        {friends.map((friend) => (\n          <li key={friend.id} className=\"name\">\n            {friend.firstName + \" \" + friend.lastName}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default FriendsList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdE,aAAa,CACVQ,UAAU,CAACJ,MAAM,CAAC,CAClBK,IAAI,CAAEC,QAAQ,IAAK;MAClBH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,CAACT,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAIc,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAY,CAAE;MAAAF,QAAA,EAAC;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtDnB,OAAA;MAAAa,QAAA,EACGT,OAAO,CAACgB,GAAG,CAAEC,MAAM,iBAClBrB,OAAA;QAAoBsB,SAAS,EAAC,MAAM;QAAAT,QAAA,EACjCQ,MAAM,CAACE,SAAS,GAAG,GAAG,GAAGF,MAAM,CAACG;MAAQ,GADlCH,MAAM,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CA1BIF,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AA4BjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}